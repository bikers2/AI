//index.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Number Check</title>
</head>
<body>
    <h2>Check Prime, Perfect, and Armstrong Numbers</h2>
    <form action="NumberCheckServlet" method="POST">
        <label for="number">Enter a number:</label>
        <input type="number" id="number" name="number" required>
        <br><br>
        <input type="submit" value="Check">
    </form>
    <h3>Result:</h3>
    <p>${result}</p>
</body>
</html>



import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@WebServlet("/NumberCheckServlet")
public class NumberCheckServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String result = "";
        int number = Integer.parseInt(request.getParameter("number"));
        if (isPrime(number)) {
            result += number + " is a Prime number.<br>";
        } else {
            result += number + " is not a Prime number.<br>";
        }

        if (isPerfect(number)) {
            result += number + " is a Perfect number.<br>";
        } else {
            result += number + " is not a Perfect number.<br>";
        }

        if (isArmstrong(number)) {
            result += number + " is an Armstrong number.<br>";
        } else {
            result += number + " is not an Armstrong number.<br>";
        }
        request.setAttribute("result", result);
        request.getRequestDispatcher("index.jsp").forward(request, response);
    }
    // Method to check if a number is prime
    private boolean isPrime(int num) {
        if (num <= 1) return false;
        for (int i = 2; i < num; i++) {  // Loop through all numbers less than the number
            if (num % i == 0) {  // If divisible by any number, it's not prime
                return false;
            }
        }
        return true;
    }
    // Method to check if a number is perfect
    private boolean isPerfect(int num) {
        int sum = 0;
        for (int i = 1; i < num; i++) {
            if (num % i == 0) sum += i;
        }
        return sum == num;
    }
    // Method to check if a number is an Armstrong number
    private boolean isArmstrong(int num) {
        int originalNumber = num;
        int result = 0;
        int digits = String.valueOf(num).length();

        while (num != 0) {
            int remainder = num % 10;
            result += Math.pow(remainder, digits);
            num /= 10;
        }
        return result == originalNumber;
    }
}
